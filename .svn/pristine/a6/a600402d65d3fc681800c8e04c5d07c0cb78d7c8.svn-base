using eSyaConfigSetup.DL.Repository;
using eSyaConfigSetup.DO;
using eSyaConfigSetup.IF;
using Microsoft.AspNetCore.Mvc;

namespace eSyaEnterprise_WebAPI.Areas.ConfigSetup.Controllers
{
    [Route("api/[controller]/[action]")]
    [ApiController]
    public class BusinessStructureController : ControllerBase
    {
        private readonly IBusinessStructureRepository _BusinessStructureRepository;
        public BusinessStructureController(IBusinessStructureRepository businessStructureRepository)
        {
            _BusinessStructureRepository = businessStructureRepository;
        }
        #region Business Entity
        /// <summary>
        /// Getting  Business Entity List.
        /// UI Reffered - Business Entity Grid
        /// </summary>
        [HttpGet]
        public IActionResult GetBusinessEntities()
        {
            var b_entities = _BusinessStructureRepository.GetBusinessEntities();
            return Ok(b_entities);
            
        }
        /// <summary>
        /// Insert Or Update Business Entity .
        /// UI Reffered -Business Entity
        /// </summary>
        [HttpPost]
        public IActionResult InsertBusinessEntity(DO_BusinessEntity businessentity)
        {
            var msg = _BusinessStructureRepository.InsertBusinessEntity(businessentity);
            return Ok(msg);
        }

        /// <summary>
        /// Insert Business Entity .
        /// UI Reffered -Business Entity
        /// </summary>
        [HttpPost]
        public IActionResult UpdateBusinessEntity(DO_BusinessEntity businessentity)
        {
            var msg = _BusinessStructureRepository.UpdateBusinessEntity(businessentity);
            return Ok(msg);
           
        }
        /// <summary>
        /// Getting  Business Entity List for dropdown.
        /// UI Reffered - Business Segment & Business Location
        /// </summary>
        [HttpGet]
        public IActionResult GetActiveBusinessEntities()
        {
            var b_entities = _BusinessStructureRepository.GetActiveBusinessEntities();
            return Ok(b_entities);
            
        }

        #endregion  Business Entity

        #region Business Segment
        /// <summary>
        /// Getting  Business Segment for Grid.
        /// UI Reffered - Business Segment
        /// </summary>
        [HttpGet]
        public IActionResult GetBusinessSegmentByBusinessId(int BusinessId)
        {
            var b_segmts = _BusinessStructureRepository.GetBusinessSegmentByBusinessId(BusinessId);
            return Ok(b_segmts);
            
        }

        /// <summary>
        /// Insert Business Segment .
        /// UI Reffered -Business Segment
        /// </summary>
        [HttpPost]
        public IActionResult InsertBusinessSegment(DO_BusinessSegment BusinessSegment)
        {
            var msg = _BusinessStructureRepository.InsertBusinessSegment(BusinessSegment);
            return Ok(msg);

        }

        /// <summary>
        /// Insert Or Update Segment .
        /// UI Reffered -Business Segment
        /// </summary>
        [HttpPost]
        public IActionResult UpdateBusinessSegment(DO_BusinessSegment BusinessSegment)
        {
            var msg = _BusinessStructureRepository.UpdateBusinessSegment(BusinessSegment);
            return Ok(msg);

        }
        /// <summary>
        /// Getting  Active Business Segment  for dropdown.
        /// UI Reffered - Business Location
        /// Parameter BusinessId
        /// </summary>
        [HttpGet]
        public IActionResult GetActiveBusinessSegmentbyBusinessId(int BusinessId)
        {
            var b_sgmts = _BusinessStructureRepository.GetActiveBusinessSegmentbyBusinessId(BusinessId);
            return Ok(b_sgmts);
           
        }
        #endregion Business Segment

        #region Business Location
        /// <summary>
        /// Getting  Business Location for Grid.
        /// UI Reffered - Business Location
        ///  Parameter BusinessId & SegmentId
        /// </summary>
        [HttpGet]
        public IActionResult GetBusinessLocationByBusinessIdandSegmentId(int BusinessId, int SegmentId)
        {
            var locs = _BusinessStructureRepository.GetBusinessLocationByBusinessIdandSegmentId(BusinessId, SegmentId);
            return Ok(locs);
           
        }

        /// <summary>
        /// Insert Business Location .
        /// UI Reffered -Business Location
        /// </summary>
        [HttpPost]
        public IActionResult InsertBusinessLocation(DO_BusinessLocation location)
        {
            var msg = _BusinessStructureRepository.InsertBusinessLocation(location);
            return Ok (msg);

        }
        /// <summary>
        /// Insert  Business Location .
        /// UI Reffered -Business Location
        /// </summary>
        [HttpPost]
        public IActionResult UpdateBusinessLocation(DO_BusinessLocation location)
        {
            var msg = _BusinessStructureRepository.UpdateBusinessLocation(location);
            return Ok(msg);
        }
        #endregion Business Segment


        #region Business Stores
        /// <summary>
        /// InsertOrUpdate Business Stores.
        /// UI Reffered - Business Stores
        /// </summary>
        [HttpPost]
        public IActionResult InsertOrUpdateBusinessStores(DO_BusinessStores store)
        {
            var msg = _BusinessStructureRepository.InsertOrUpdateBusinessStores(store);
            return Ok(msg);
        }
        /// <summary>
        /// Getting Business Stores.
        /// UI Reffered - Business Stores Grid
        /// UI-Param-Businesskey
        /// </summary>
        [HttpGet]
        public IActionResult GetBusinessStores(int Businesskey)
        {
            var stores = _BusinessStructureRepository.GetBusinessStores(Businesskey);
            return Ok(stores);
        }
        #endregion Business Stores

        #region Business Statutory Details
        /// <summary>
        /// InsertOrUpdate Business Statutory Details.
        /// UI Reffered - Business Statutory Details
        /// </summary>
        [HttpPost]
        public IActionResult InsertOrUpdateBusinessStatutoryDetails(DO_BusinessStatutoryDetails statutorydetails)
        {
            var msg = _BusinessStructureRepository.InsertOrUpdateBusinessStatutoryDetails(statutorydetails);
            return Ok (msg);
        }
        /// <summary>
        /// Getting  Business Statutory Details.
        /// UI Reffered -  Business Statutory Details
        /// </summary>
        [HttpGet]
        public IActionResult GetBusinessStatutoryDetails(int BusinessKey)
        {
            var sta_details = _BusinessStructureRepository.GetBusinessStatutoryDetails(BusinessKey);
            return Ok(sta_details);
        }
        #endregion Business Statutory Details
    }
}