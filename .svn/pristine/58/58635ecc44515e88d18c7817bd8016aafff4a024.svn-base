using eSyaConfigSetup.DL.Repository;
using eSyaConfigSetup.DO;
using eSyaConfigSetup.IF;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;

namespace eSyaEnterprise_WebAPI.Areas.ConfigSetup.Controllers
{
    [Route("api/[controller]/[action]")]
    [ApiController]
    public class TaxIdentificationController : ControllerBase
    {
        private readonly ITaxIdentificationRepository _TaxIdentificationRepository;
        public TaxIdentificationController(ITaxIdentificationRepository TaxIdentificationRepository)
        {
            _TaxIdentificationRepository = TaxIdentificationRepository;
        }
        /// <summary>
        /// Get Tax Identification for specific ISD Code.
        /// UI Reffered - Fill Grid on ISD Code selection in Tax Identification
        /// </summary>
        /// <param name="CountryCode"></param>
        /// <returns></returns>
        [HttpGet]
        public async Task<IActionResult> GetTaxIdentificationByISDCode(int ISDCode)
        {
            var tax_structs =await _TaxIdentificationRepository.GetTaxIdentificationByISDCode(ISDCode);
            return Ok(tax_structs);
        }

        /// <summary>
        /// Insert into  Tax Identification Table
        /// UI Reffered -  Tax Identification,
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertIntoTaxIdentification(DO_TaxIdentification obj)
        {
            var msg = await _TaxIdentificationRepository.InsertIntoTaxIdentification(obj);
            return Ok(msg);
        }

        /// <summary>
        /// Update into  Tax Identification Table
        /// UI Reffered -  Tax Identification,
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> UpdateTaxIdentification(DO_TaxIdentification obj)
        {
            var msg = await _TaxIdentificationRepository.UpdateTaxIdentification(obj);
            return Ok(msg);
        }
    }
}